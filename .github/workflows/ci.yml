name: CI

on:
  push:
    branches: [ main, develop, feature/* ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test-user-service:
    name: Test User Service
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: academiasync_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: backend/user-service/package-lock.json

      - name: Install dependencies
        working-directory: backend/user-service
        run: npm install
      - name: Run tests
        working-directory: backend/user-service
        env:
          DB_HOST: localhost
          DB_PORT: 5432
          DB_NAME: academiasync_test
          DB_USER: postgres
          DB_PASSWORD: postgres
          PORT: 5000
        run: npm test

  test-course-service:
    name: Test Course Service
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: academiasync_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: backend/course-service/package-lock.json

      - name: Install dependencies
        working-directory: backend/course-service
        run: npm install


      - name: Run tests
        working-directory: backend/course-service
        env:
          DB_HOST: localhost
          DB_PORT: 5432
          DB_NAME: academiasync_test
          DB_USER: postgres
          DB_PASSWORD: postgres
          PORT: 5001
        run: npm test

  status-check:
    name: CI Status
    runs-on: ubuntu-latest
    needs: [test-user-service, test-course-service]
    if: always()

    steps:
      - name: Check CI Status
        run: |
          if [ "${{ needs.test-user-service.result }}" == "success" ] && \
             [ "${{ needs.test-course-service.result }}" == "success" ]; then
            echo "✅ All CI checks passed!"
            exit 0
          else
            echo "❌ Some CI checks failed"
            echo "User Service Tests: ${{ needs.test-user-service.result }}"
            echo "Course Service Tests: ${{ needs.test-course-service.result }}"
            exit 1
          fi
